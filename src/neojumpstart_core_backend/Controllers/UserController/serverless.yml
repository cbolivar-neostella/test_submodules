functions:
  # Users
  UsersPost:
    handler: src/neojumpstart_core_backend/Controllers/UserController/UsersPost.lambda_handler
    environment:
      RESOURCE_METHOD: UsersPost
    events:
      - http:
          path: users
          cors: True
          method: post
          documentation: ${file(./src/neojumpstart_core_backend/OpenAPI_Doc/serverless.doc.yml):functions.UsersPost}
          authorizer:
            type: COGNITO_USER_POOLS
            scopes:
              - aws.cognito.signin.user.admin
              - apiauthidentifier/json.read
            authorizerId:
              Ref: ApiGatewayAuthorizer

  UsersPut:
    handler: src/neojumpstart_core_backend/Controllers/UserController/UsersPut.lambda_handler
    environment:
      RESOURCE_METHOD: UsersPut
    events:
      - http:
          path: users
          cors: True
          method: put
          documentation: ${file(./src/neojumpstart_core_backend/OpenAPI_Doc/serverless.doc.yml):functions.UsersPut}
          authorizer:
            type: COGNITO_USER_POOLS
            scopes:
              - aws.cognito.signin.user.admin
              - apiauthidentifier/json.read
            authorizerId:
              Ref: ApiGatewayAuthorizer

  UsersGet:
    handler: src/neojumpstart_core_backend/Controllers/UserController/UsersGet.lambda_handler
    environment:
      RESOURCE_METHOD: UsersGet
    events:
      - http:
          path: users
          cors: True
          method: get
          documentation: ${file(./src/neojumpstart_core_backend/OpenAPI_Doc/serverless.doc.yml):functions.UsersGet}
          authorizer:
            type: COGNITO_USER_POOLS
            scopes:
              - aws.cognito.signin.user.admin
              - apiauthidentifier/json.read
            authorizerId:
              Ref: ApiGatewayAuthorizer

  ResendPasswordPost:
    handler: src/neojumpstart_core_backend/Controllers/UserController/ResendPasswordPost.lambda_handler
    environment:
      RESOURCE_METHOD: ResendPasswordPost
    events:
      - http:
          path: resendpassword
          cors: True
          method: post
          documentation: ${file(./src/neojumpstart_core_backend/OpenAPI_Doc/serverless.doc.yml):functions.ResendPasswordPost}
          authorizer:
            type: COGNITO_USER_POOLS
            scopes:
              - aws.cognito.signin.user.admin
              - apiauthidentifier/json.read
            authorizerId:
              Ref: ApiGatewayAuthorizer

  #Timezones
  TimeZonesGet:
    handler: src/neojumpstart_core_backend/Controllers/UserController/TimeZonesGet.lambda_handler
    environment:
      RESOURCE_METHOD: TimeZonesGet
    events:
      - http:
          path: tz
          cors: True
          method: get
          documentation: ${file(./src/neojumpstart_core_backend/OpenAPI_Doc/serverless.doc.yml):functions.TimeZonesGet}
          authorizer:
            type: COGNITO_USER_POOLS
            scopes:
              - aws.cognito.signin.user.admin
              - apiauthidentifier/json.read
            authorizerId:
              Ref: ApiGatewayAuthorizer
